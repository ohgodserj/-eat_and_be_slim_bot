from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, CommandHandler, CallbackQueryHandler, CallbackContext

# Токен от BotFather
TOKEN = "7428205184:AAHKGl0ek2ZwMgZtz4WGO0sTJX6z927xvVM"

# Главное меню
def start(update: Update, context: CallbackContext):
    keyboard = [
        [InlineKeyboardButton("1. Составить меню", callback_data="menu")],
        [InlineKeyboardButton("2. Составить список покупок по меню", callback_data="shopping_list")],
        [InlineKeyboardButton("3. Книга рецептов по меню", callback_data="recipe_book")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    update.message.reply_text("Привет! Выберите действие:", reply_markup=reply_markup)

# Обработка нажатий в меню
def menu_handler(update: Update, context: CallbackContext):
    query = update.callback_query
    query.answer()

    if query.data == "menu":
        keyboard = [
            [InlineKeyboardButton("1.1. Составить рандомное меню", callback_data="random_menu")],
            [InlineKeyboardButton("1.2. Составить меню самостоятельно", callback_data="manual_menu")],
            [InlineKeyboardButton("1.3. Посмотреть всё меню", callback_data="view_menu")],
            [InlineKeyboardButton("Вернуться в главное меню", callback_data="main_menu")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text("Выберите действие:", reply_markup=reply_markup)

    elif query.data == "random_menu":
        query.edit_message_text("Функция для генерации случайного меню в разработке.")

    elif query.data == "manual_menu":
        keyboard = [
            [InlineKeyboardButton("Завтрак", callback_data="breakfast")],
            [InlineKeyboardButton("Обед", callback_data="lunch")],
            [InlineKeyboardButton("Перекус", callback_data="snack")],
            [InlineKeyboardButton("Ужин", callback_data="dinner")],
            [InlineKeyboardButton("Десерт", callback_data="dessert")],
            [InlineKeyboardButton("Вернуться в меню выбора", callback_data="menu")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text("Выберите прием пищи:", reply_markup=reply_markup)

    elif query.data == "view_menu":
        keyboard = [
            [InlineKeyboardButton("1.3.1. Посмотреть меню по приему пищи", callback_data="menu_by_meal")],
            [InlineKeyboardButton("1.3.2. Посмотреть меню целиком", callback_data="full_menu")],
            [InlineKeyboardButton("Вернуться в меню выбора", callback_data="menu")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        query.edit_message_text("Как вы хотите просмотреть меню?", reply_markup=reply_markup)

    elif query.data == "shopping_list":
        query.edit_message_text("Функция для составления списка покупок в разработке.")

    elif query.data == "recipe_book":
        query.edit_message_text("Функция для создания книги рецептов в разработке.")

    elif query.data == "main_menu":
        start(update, context)

# Главный обработчик
def main():
    updater = Updater(TOKEN)
    dispatcher = updater.dispatcher

    # Обработчики команд
    dispatcher.add_handler(CommandHandler("start", start))
    dispatcher.add_handler(CallbackQueryHandler(menu_handler))

    # Запуск бота
    updater.start_polling()
    updater.idle()

if __name__ == "__main__":
    main()
